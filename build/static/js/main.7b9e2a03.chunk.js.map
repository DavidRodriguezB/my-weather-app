{"version":3,"sources":["components/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["CardExampleCard","weatherData","Card","Content","Header","className","name","main","temp","Date","sys","sunrise","toLocaleTimeString","sunset","weather","humidity","moment","format","App","useState","data","useEffect","Weather","Dimmer","active","Loader","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAoBeA,EAfS,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAF,OACpB,cAACC,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,QAAN,WACI,eAACD,EAAA,EAAKE,OAAN,CAAaC,UAAU,SAAvB,wBAA4CJ,EAAYK,QACxD,6CAAgBL,EAAYM,KAAKC,KAAjC,YACA,0CAAa,IAAIC,KAA+B,IAA1BR,EAAYS,IAAIC,SAAgBC,mBAAmB,YACzE,yCAAY,IAAIH,KAA8B,IAAzBR,EAAYS,IAAIG,QAAeD,mBAAmB,YACvE,8CAAiBX,EAAYa,QAAQ,GAAGP,QACxC,2CAAcN,EAAYM,KAAKQ,SAA/B,QACA,sCAASC,MAASC,OAAO,WACzB,uCAAUD,MAASC,OAAO,e,kBCTrB,SAASC,IAEtB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,UAcA,OAZAC,qBAAU,cAUR,IAGA,qBAAKhB,UAAU,MAAf,SACsB,oBAAbe,EAAKb,KACZ,cAACe,EAAD,CAASrB,YAAamB,IAEtB,8BACE,cAACG,EAAA,EAAD,CAAQC,QAAM,EAAd,SACE,cAACC,EAAA,EAAD,8BC7BV,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.7b9e2a03.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card } from 'semantic-ui-react'\r\nimport moment from 'moment';\r\n\r\n\r\nconst CardExampleCard = ({weatherData}) => (\r\n    <Card>\r\n      <Card.Content>\r\n          <Card.Header className=\"header\">City Name: {weatherData.name}</Card.Header>\r\n          <p>Temprature: {weatherData.main.temp} &deg;C</p>\r\n          <p>Sunrise: {new Date(weatherData.sys.sunrise * 1000).toLocaleTimeString('en-IN')}</p>\r\n          <p>Sunset: {new Date(weatherData.sys.sunset * 1000).toLocaleTimeString('en-IN')}</p>\r\n          <p>Description: {weatherData.weather[0].main}</p>\r\n          <p>Humidity: {weatherData.main.humidity} %</p>\r\n          <p>Day: {moment().format('dddd')}</p>\r\n          <p>Date: {moment().format('LL')}</p>\r\n      </Card.Content>\r\n    </Card>\r\n  )\r\n\r\nexport default CardExampleCard;","import './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport Weather from './components/Weather';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\n\nexport default function App() {\n\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n\n      await fetch(`${process.env.REACT_APP_API_URL}/weather?q=Zaragoza&appid=${process.env.REACT_APP_API_KEY}`)\n      .then(res => res.json())\n      .then(result => {\n        setData(result)\n        console.log(result);\n      });\n    }\n  },[])\n  \n  return (\n    <div className=\"App\">\n    {(typeof data.main != 'undefined') ? (\n      <Weather weatherData={data}/>\n    ): (\n      <div>\n        <Dimmer active>\n          <Loader>Loading..</Loader>\n        </Dimmer>\n     </div>\n   )}\n</div>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}